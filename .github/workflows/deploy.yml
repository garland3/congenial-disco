name: Deploy

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
        - production
        - staging

jobs:
  deploy-staging:
    if: github.ref == 'refs/heads/main' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging')
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment"
        # Add your staging deployment commands here
        # Example: kubectl, docker-compose, or cloud provider CLI commands
        
  deploy-production:
    if: startsWith(github.ref, 'refs/tags/v') || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production')
    runs-on: ubuntu-latest
    environment: production
    needs: [deploy-staging]
    
    steps:
    - name: Deploy to production
      run: |
        echo "Deploying to production environment"
        # Add your production deployment commands here
        # Example:
        # - Update container orchestration (Kubernetes, Docker Swarm)
        # - Deploy to cloud platforms (AWS, GCP, Azure)
        # - Update serverless functions
        
    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        body: |
          ## Changes
          - Automated release from tag ${{ github.ref }}
          
          ## Docker Image
          ```
          docker pull ghcr.io/${{ github.repository }}:${{ github.ref_name }}
          ```

  # Example deployment to a VPS or cloud instance
  deploy-docker:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Deploy via Docker Compose
      run: |
        echo "Example deployment using Docker Compose"
        # Uncomment and modify for your deployment target:
        # 
        # - name: Deploy to server
        #   uses: appleboy/ssh-action@v1.0.0
        #   with:
        #     host: ${{ secrets.HOST }}
        #     username: ${{ secrets.USERNAME }}
        #     key: ${{ secrets.KEY }}
        #     script: |
        #       cd /path/to/your/app
        #       git pull origin main
        #       docker-compose pull
        #       docker-compose up -d --remove-orphans
        #       docker system prune -f